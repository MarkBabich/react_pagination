{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","components/ItemsList/ItemsList.tsx","pages/ListPage/ListPage.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","currentPage","itemAmount","itemsPerPage","match","useMatch","params","numberOfPages","Math","ceil","paginationButtons","isFirstPage","isLastPage","className","classNames","disabled","map","page","active","ItemsList","items","item","ListPage","App","useState","itemPerPage","setItemPerPage","navigate","useNavigate","length","currentItems","lastIndex","slice","getCurrentItems","firstItemNumber","indexOf","lastItemNumber","id","value","onChange","event","target","htmlFor","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af2ca311.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { Link, useMatch } from 'react-router-dom';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  itemAmount: number,\n  itemsPerPage: number,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  itemAmount,\n  itemsPerPage,\n}) => {\n  const match = useMatch('/:currentPage');\n  let currentPage: number;\n\n  if (match?.params.currentPage) {\n    currentPage = +match?.params.currentPage;\n  } else {\n    currentPage = 1;\n  }\n\n  const numberOfPages = Math.ceil(itemAmount / itemsPerPage);\n  const paginationButtons = getNumbers(1, numberOfPages);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === numberOfPages;\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: isFirstPage },\n        )}\n      >\n        <Link\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          to={`${currentPage - 1}`}\n          aria-disabled={isFirstPage}\n        >\n          «\n        </Link>\n      </li>\n      {paginationButtons.map((page) => (\n        <li\n          key={page}\n          className={classNames(\n            'page-item',\n            { active: page === currentPage },\n          )}\n        >\n          <Link\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            to={`${page}`}\n          >\n            {page}\n          </Link>\n        </li>\n      ))}\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: isLastPage },\n        )}\n      >\n        <Link\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          to={`${currentPage + 1}`}\n          aria-disabled={isLastPage}\n        >\n          »\n        </Link>\n      </li>\n    </ul>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  items: string[],\n};\n\nexport const ItemsList: React.FC<Props> = ({ items }) => {\n  return (\n    <ul>\n      {items.map((item) => (\n        <li\n          data-cy=\"item\"\n          key={item}\n        >\n          {item}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { ItemsList } from '../../components/ItemsList/ItemsList';\n\ntype Props = {\n  items: string[],\n};\n\nexport const ListPage: React.FC<Props> = ({ items }) => {\n  return (\n    <ItemsList\n      items={items}\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n// eslint-disable-next-line object-curly-newline\nimport { Route, Routes, useMatch, useNavigate } from 'react-router-dom';\nimport { Pagination } from './components/Pagination';\nimport { ListPage } from './pages/ListPage/ListPage';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items: string[] = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst getCurrentItems = (itemPerPage: number, currentPage: number) => {\n  const lastIndex = itemPerPage * currentPage;\n\n  return items.slice(lastIndex - itemPerPage, lastIndex);\n};\n\nexport const App: React.FC = () => {\n  const [itemPerPage, setItemPerPage] = useState(5);\n  const navigate = useNavigate();\n  const match = useMatch('/:currentPage');\n  let currentPage: number;\n\n  if (match?.params.currentPage) {\n    currentPage = +match?.params.currentPage;\n  } else {\n    currentPage = 1;\n  }\n\n  const itemAmount = items.length;\n  const currentItems = getCurrentItems(itemPerPage, currentPage);\n  const firstItemNumber = items.indexOf(currentItems[0]) + 1;\n  const lastItemNumber = items\n    .indexOf(currentItems[currentItems.length - 1]) + 1;\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemPerPage(+event.target.value);\n\n    navigate('/1');\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemNumber} - ${lastItemNumber} of ${itemAmount})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemPerPage}\n            onChange={handleSelectChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        itemAmount={itemAmount}\n        itemsPerPage={itemPerPage}\n      />\n\n      <Routes>\n        <Route\n          path=\":currentPage\"\n          element={<ListPage items={currentItems} />}\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render((\n  <HashRouter>\n    <App />\n  </HashRouter>\n), document.getElementById('root'));\n"],"sourceRoot":""}